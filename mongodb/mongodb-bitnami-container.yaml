apiVersion: v1
kind: Namespace
metadata:
  name: mongodb
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb
  namespace: mongodb
  labels:
    app: mongodb
spec:
  selector:
    app: mongodb
  #clusterIP: None
  type: LoadBalancer
  loadBalancerIP: 192.168.39.221
  ports:
  - port: 27017
    name: tcp-mongodb
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
  name: mongodb
  namespace: mongodb
spec:
  replicas: 1
  serviceName: mongodb
  selector:
    matchLabels:
      app: mongodb
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName:
      resources:
        requests:
          storage: 1Gi
  template:
    metadata:
      annotations:
      labels:
        app: mongodb
      name: mongodb
    spec:
      # serviceAccount:
      # serviceAccountName:
      # nodeSelector:
      #   kubernetes.io/os: linux
      # securityContext: {}
      containers:
      - name: minio
        image: bitnami/mongodb:6.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 27017
          name: tcp-mongodb
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        env:
        - name: MONGODB_PORT_NUMBER
          value: "27017"
        - name: MONGODB_ROOT_USER
          value: root
        - name: MONGODB_ROOT_PASSWORD
          value: rootpw
        - name: MONGODB_USERNAME
          value: rin
        - name: MONGODB_PASSWORD
          value: rinpw
        - name: MONGODB_DATABASE
          value: rindb
        # livenessProbe:
        #   exec:
        #     command:
        #     - /usr/bin/check-status
        #     - -l
        #   failureThreshold: 6
        #   initialDelaySeconds: 10
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 10
        # readinessProbe:
        #   exec:
        #     command:
        #     - /usr/bin/check-status
        #     - -r
        #   failureThreshold: 3
        #   periodSeconds: 10
        #   successThreshold: 1
        #   timeoutSeconds: 1
        # resources: {}
